[gd_resource type="ShaderMaterial" load_steps=18 format=2]

[ext_resource path="res://Art/new_noisetexture.tres" type="Texture" id=1]

[sub_resource type="VisualShaderNodeInput" id=16]
input_name = "uv"

[sub_resource type="VisualShaderNodeTexture" id=17]
texture = ExtResource( 1 )

[sub_resource type="VisualShaderNodeScalarOp" id=18]
output_port_for_preview = 0
operator = 2

[sub_resource type="VisualShaderNodeScalarOp" id=19]
default_input_values = [ 0, 0.0, 1, 0.65 ]
operator = 9

[sub_resource type="VisualShaderNodeScalarFunc" id=20]
function = 12

[sub_resource type="VisualShaderNodeScalarOp" id=21]
operator = 9

[sub_resource type="VisualShaderNodeScalarOp" id=22]
default_input_values = [ 0, 0.0, 1, 0.05 ]
operator = 1

[sub_resource type="VisualShaderNodeScalarOp" id=23]
output_port_for_preview = 0
operator = 1

[sub_resource type="VisualShaderNodeVectorOp" id=24]
output_port_for_preview = 0
operator = 2

[sub_resource type="VisualShaderNodeInput" id=6]
input_name = "uv"

[sub_resource type="VisualShaderNodeColorConstant" id=25]
constant = Color( 0.925312, 0.518432, 0.0853019, 1 )

[sub_resource type="VisualShaderNodeColorOp" id=26]

[sub_resource type="VisualShaderNodeScalarFunc" id=7]
output_port_for_preview = 0
function = 0

[sub_resource type="VisualShaderNodeInput" id=8]
input_name = "time"

[sub_resource type="VisualShaderNodeTexture" id=11]
source = 2
texture = ExtResource( 1 )

[sub_resource type="VisualShader" id=14]
code = "shader_type canvas_item;
uniform sampler2D tex_frg_12;



void vertex() {
// Output:0

}

void fragment() {
// Input:2
	vec3 n_out2p0 = vec3(UV, 0.0);

// Texture:7
	vec3 n_out7p0;
	float n_out7p1;
	{
		vec4 _tex_read = texture(TEXTURE, n_out2p0.xy);
		n_out7p0 = _tex_read.rgb;
		n_out7p1 = _tex_read.a;
	}

// Input:11
	vec3 n_out11p0 = vec3(UV, 0.0);

// Texture:12
	vec4 tex_frg_12_read = texture(tex_frg_12, n_out11p0.xy);
	vec3 n_out12p0 = tex_frg_12_read.rgb;
	float n_out12p1 = tex_frg_12_read.a;

// Input:4
	float n_out4p0 = TIME;

// ScalarFunc:3
	float n_out3p0 = sin(n_out4p0);

// ScalarFunc:15
	float n_out15p0 = abs(n_out3p0);

// ScalarOp:14
	float n_out14p0 = step(dot(n_out12p0, vec3(0.333333, 0.333333, 0.333333)), n_out15p0);

// ScalarOp:17
	float n_in17p1 = 0.05000;
	float n_out17p0 = n_out15p0 - n_in17p1;

// ScalarOp:16
	float n_out16p0 = step(dot(n_out12p0, vec3(0.333333, 0.333333, 0.333333)), n_out17p0);

// ScalarOp:18
	float n_out18p0 = n_out14p0 - n_out16p0;

// Color:20
	vec3 n_out20p0 = vec3(0.925312, 0.518432, 0.085302);
	float n_out20p1 = 1.000000;

// VectorOp:19
	vec3 n_out19p0 = vec3(n_out18p0) * n_out20p0;

// ColorOp:21
	vec3 n_out21p0 = vec3(1.0) - (vec3(1.0) - n_out7p0) * (vec3(1.0) - n_out19p0);

// ScalarOp:13
	float n_out13p0 = n_out7p1 * n_out14p0;

// Output:0
	COLOR.rgb = n_out21p0;
	COLOR.a = n_out13p0;

}

void light() {
// Output:0

}
"
graph_offset = Vector2( -694.732, 153.181 )
mode = 1
flags/light_only = false
nodes/fragment/0/position = Vector2( 160, 220 )
nodes/fragment/2/node = SubResource( 6 )
nodes/fragment/2/position = Vector2( -1600, 120 )
nodes/fragment/3/node = SubResource( 7 )
nodes/fragment/3/position = Vector2( -1580, 700 )
nodes/fragment/4/node = SubResource( 8 )
nodes/fragment/4/position = Vector2( -1880, 720 )
nodes/fragment/7/node = SubResource( 11 )
nodes/fragment/7/position = Vector2( -1400, 120 )
nodes/fragment/11/node = SubResource( 16 )
nodes/fragment/11/position = Vector2( -1600, 400 )
nodes/fragment/12/node = SubResource( 17 )
nodes/fragment/12/position = Vector2( -1400, 400 )
nodes/fragment/13/node = SubResource( 18 )
nodes/fragment/13/position = Vector2( -980, 380 )
nodes/fragment/14/node = SubResource( 19 )
nodes/fragment/14/position = Vector2( -1200, 520 )
nodes/fragment/15/node = SubResource( 20 )
nodes/fragment/15/position = Vector2( -1340, 700 )
nodes/fragment/16/node = SubResource( 21 )
nodes/fragment/16/position = Vector2( -960, 740 )
nodes/fragment/17/node = SubResource( 22 )
nodes/fragment/17/position = Vector2( -1180, 840 )
nodes/fragment/18/node = SubResource( 23 )
nodes/fragment/18/position = Vector2( -676.452, 730.34 )
nodes/fragment/19/node = SubResource( 24 )
nodes/fragment/19/position = Vector2( -280.414, 787.94 )
nodes/fragment/20/node = SubResource( 25 )
nodes/fragment/20/position = Vector2( -440, 1040 )
nodes/fragment/21/node = SubResource( 26 )
nodes/fragment/21/position = Vector2( -120, 380 )
nodes/fragment/connections = PoolIntArray( 2, 0, 7, 0, 7, 1, 13, 0, 13, 0, 0, 1, 11, 0, 12, 0, 14, 0, 13, 1, 3, 0, 15, 0, 12, 0, 14, 0, 15, 0, 14, 1, 4, 0, 3, 0, 12, 0, 16, 0, 15, 0, 17, 0, 17, 0, 16, 1, 14, 0, 18, 0, 16, 0, 18, 1, 18, 0, 19, 0, 20, 0, 19, 1, 19, 0, 21, 1, 7, 0, 21, 0, 21, 0, 0, 0 )

[resource]
shader = SubResource( 14 )
